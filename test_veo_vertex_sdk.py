"""
Teste completo do Google Veo 3.1 via Vertex AI SDK
Verifica se a integra√ß√£o com API Key est√° funcionando
"""

import sys
import os
from pathlib import Path

# Adiciona backend ao path
backend_path = Path(__file__).parent / "backend"
sys.path.insert(0, str(backend_path))

print("=" * 80)
print("üé¨ TESTE: Google Veo 3.1 via Vertex AI SDK")
print("=" * 80)

# 1. Verificar vari√°veis de ambiente
print("\nüìã 1. Verificando configura√ß√£o do ambiente...")
from dotenv import load_dotenv

# Carrega .env do backend
env_path = backend_path / ".env"
load_dotenv(dotenv_path=env_path)

api_key = os.getenv("GOOGLE_VERTEX_API_KEY")
project_id = os.getenv("GOOGLE_CLOUD_PROJECT", "talking-photo-gen-441622")  # Valor padr√£o
region = os.getenv("GOOGLE_CLOUD_REGION", "us-central1")

print(f"   ‚úì API Key: {'‚úÖ Configurada' if api_key else '‚ùå N√ÉO ENCONTRADA'}")
print(f"   ‚úì Project ID: {project_id}")
print(f"   ‚úì Region: {region}")

if not api_key:
    print("\n‚ùå ERRO: GOOGLE_VERTEX_API_KEY n√£o encontrada no backend/.env")
    sys.exit(1)

# 2. Verificar imports necess√°rios
print("\nüì¶ 2. Verificando importa√ß√µes...")
try:
    import requests
    print("   ‚úÖ requests instalado")
except ImportError:
    print("   ‚ùå requests n√£o encontrado")
    sys.exit(1)

# 3. Testar importa√ß√£o do veo31_simple
print("\nüîß 3. Testando importa√ß√£o do m√≥dulo veo31_simple...")
try:
    from veo31_simple import generate_video_veo31
    print("   ‚úÖ M√≥dulo veo31_simple importado com sucesso")
except Exception as e:
    print(f"   ‚ùå ERRO ao importar: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)

# 4. Testar gera√ß√£o de v√≠deo
print("\nüé• 4. Preparando imagem de teste...")
# Cria uma imagem simples para teste
from PIL import Image
import tempfile

temp_image = tempfile.NamedTemporaryFile(suffix='.jpg', delete=False)
img = Image.new('RGB', (512, 512), color='skyblue')
img.save(temp_image.name)
print(f"   ‚úÖ Imagem criada: {temp_image.name}")

print("\nüé¨ 5. Testando gera√ß√£o de v√≠deo...")
print("   Prompt: 'A serene sunset over a calm ocean with gentle waves'")
print("   Configura√ß√£o: 720p, 5 segundos")
print("\n   ‚è≥ Iniciando gera√ß√£o (pode demorar alguns minutos)...\n")

try:
    result = generate_video_veo31(
        prompt="A serene sunset over a calm ocean with gentle waves",
        duration=5,
        resolution="720p",
        api_key=api_key,
        project_id=project_id,
        location=region,
        image_url=temp_image.name  # Usa imagem de teste
    )
    
    print("\n" + "=" * 80)
    print("‚úÖ SUCESSO! V√≠deo gerado com Vertex AI REST API")
    print("=" * 80)
    print(f"\nüìä Resultado:")
    print(f"   - URL do v√≠deo: {result.get('video_url', 'N/A')}")
    print(f"   - Dura√ß√£o: {result.get('duration', 'N/A')}s")
    print(f"   - Resolu√ß√£o: {result.get('resolution', 'N/A')}")
    print(f"   - Status: {result.get('status', 'N/A')}")
    print(f"   - Custo: ${result.get('cost', 'N/A')}")
    
    if result.get('video_url'):
        print(f"\nüé¨ V√≠deo dispon√≠vel em: {result['video_url']}")
    
    print("\n‚úÖ Integra√ß√£o com Vertex AI REST API funcionando perfeitamente!")
    
    # Limpa arquivo tempor√°rio
    import os
    os.unlink(temp_image.name)
    
except Exception as e:
    print("\n" + "=" * 80)
    print("‚ùå ERRO durante gera√ß√£o")
    print("=" * 80)
    print(f"\nErro: {str(e)}\n")
    import traceback
    traceback.print_exc()
    
    # Limpa arquivo tempor√°rio
    import os
    try:
        os.unlink(temp_image.name)
    except:
        pass
    
    # Verifica tipo de erro
    if "401" in str(e) or "authentication" in str(e).lower():
        print("\nüí° DICA: Erro de autentica√ß√£o")
        print("   - Verifique se GOOGLE_VERTEX_API_KEY est√° correto")
        print("   - Confirme se o projeto est√° ativo no Google Cloud")
    elif "403" in str(e) or "permission" in str(e).lower():
        print("\nüí° DICA: Erro de permiss√£o")
        print("   - Verifique se Vertex AI API est√° habilitada no projeto")
        print("   - Confirme se a API Key tem permiss√µes corretas")
    elif "404" in str(e):
        print("\nüí° DICA: Endpoint n√£o encontrado")
        print("   - Verifique se o modelo 'veo-3.1' est√° dispon√≠vel na regi√£o us-central1")
        print("   - Tente regi√£o diferente: europe-west4")
    
    sys.exit(1)

print("\n" + "=" * 80)
print("üéâ TESTE CONCLU√çDO COM SUCESSO!")
print("=" * 80)
