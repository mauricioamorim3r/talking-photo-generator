"""Test frontend service health"""
import requests
import time

URL = "https://foto-video-fantasias.onrender.com"

print("üîç Testando servi√ßo frontend...\n")

# Test 1: Basic connectivity
print("1Ô∏è‚É£ Teste de conectividade b√°sica")
try:
    response = requests.get(URL, timeout=10)
    print(f"   Status: {response.status_code}")
    print(f"   Headers: {dict(response.headers)}")
    
    if response.status_code == 502:
        print(f"\n‚ùå 502 Bad Gateway - Servi√ßo n√£o est√° respondendo")
        print(f"   Poss√≠veis causas:")
        print(f"   ‚Ä¢ Start command incorreto")
        print(f"   ‚Ä¢ Porta n√£o configurada corretamente")
        print(f"   ‚Ä¢ Serve n√£o instalado")
        print(f"   ‚Ä¢ Servi√ßo crashando ao iniciar")
    elif response.status_code == 200:
        print(f"\n‚úÖ Servi√ßo respondendo!")
        if 'id="root"' in response.text:
            print(f"   ‚úÖ React app carregada")
        else:
            print(f"   ‚ö†Ô∏è  React app n√£o encontrada")
            
except requests.exceptions.Timeout:
    print(f"   ‚è±Ô∏è  Timeout - Servi√ßo n√£o responde")
except requests.exceptions.ConnectionError as e:
    print(f"   ‚ùå Erro de conex√£o: {e}")

# Test 2: Health check
print(f"\n2Ô∏è‚É£ Teste de health check")
try:
    response = requests.get(f"{URL}/health", timeout=5)
    print(f"   Status: {response.status_code}")
except Exception as e:
    print(f"   ‚ùå Health check falhou: {type(e).__name__}")

print(f"\nüìã Pr√≥ximos passos:")
print(f"   1. Verifique os logs no dashboard do Render")
print(f"   2. Confirme que o Start Command √©: serve -s build -l $PORT")
print(f"   3. Confirme que o Build Command inclui: npm install -g serve")
print(f"   4. Fa√ßa Manual Deploy ‚Üí Clear build cache & deploy")
